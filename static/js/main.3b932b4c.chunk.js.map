{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchPictureName","setSearchPictureName","className","styles","SearchForm","event","preventDefault","trim","toast","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGallery","children","ImageGalleryItem","largeImageURL","tags","webformatURL","onPictureClick","src","url","alt","ImageGalleryItem_image","onClick","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","createPortal","Overlay","target","Button","onFetchImages","scrollTo","top","documentElement","scrollHeight","behavior","App","pictures","setPictures","currentPage","setCurrentPage","error","setError","loading","setLoading","modal","setModal","modalUrl","setModalUrl","modalAlt","setModalAlt","currentPageImages","setCurrentPageImages","fetchImages","toggleModal","getAttribute","fetch","then","response","json","hits","length","Promise","reject","Error","prevPictures","prevState","catch","finally","shouldRenderLoadMoreButton","searchPicture","message","color","height","width","timeout","map","id","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b932b4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1Ib98\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__13p-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3VEyi\",\"Modal\":\"Modal_Modal__3A-3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2Ek4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2aSYq\"};","// import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Searchbar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport React, { useState} from \"react\";\r\nconst Searchbar = ({onSubmit}) => {\r\n  const [searchPictureName, setSearchPictureName] = useState(\"\");\r\n  \r\n   const onInputChange = (event) => {\r\n   setSearchPictureName( event.currentTarget.value.toLowerCase()    );\r\n  };\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchPictureName.trim() === \"\") {\r\n      return toast(\"Введите имя картинки\");\r\n    }\r\n   onSubmit(searchPictureName);\r\n    setSearchPictureName(  \"\" );\r\n  };\r\n\r\n  return (\r\n          <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={onFormSubmit}>\r\n          <button type=\"submit\" className={styles.SearchForm_button}>\r\n            <span className={styles.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchPictureName}\r\n            onChange={onInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n  )\r\n}\r\n\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     searchPictureName: \"\",\r\n//   };\r\n//   onInputChange = (event) => {\r\n//     this.setState({\r\n//       searchPictureName: event.currentTarget.value.toLowerCase(),\r\n//     });\r\n//   };\r\n//   onFormSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     if (this.state.searchPictureName.trim() === \"\") {\r\n//       return toast(\"Введите имя картинки\");\r\n//     }\r\n//     this.props.onSubmit(this.state.searchPictureName);\r\n//     this.setState({ searchPictureName: \"\" });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <header className={styles.Searchbar}>\r\n//         <form className={styles.SearchForm} onSubmit={this.onFormSubmit}>\r\n//           <button type=\"submit\" className={styles.SearchForm_button}>\r\n//             <span className={styles.SearchForm_button_label}>Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             className={styles.SearchForm_input}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             value={this.state.searchPictureName}\r\n//             onChange={this.onInputChange}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import styles from \"./ImageGallery.module.css\";\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className={styles.ImageGallery}>{children}</ul>\r\n);\r\nexport default ImageGallery;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\nconst ImageGalleryItem = ({\r\n  largeImageURL,\r\n  tags,\r\n  webformatURL,\r\n\r\n  onPictureClick,\r\n}) => {\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        url={largeImageURL}\r\n        alt={tags}\r\n        className={styles.ImageGalleryItem_image}\r\n        onClick={onPictureClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  onPictureClick: PropTypes.func.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","// import React, { Component } from \"react\";\r\nimport React, { useEffect } from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nconst Modal = ({ src, alt, onClose }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n    };\r\n  });\r\n\r\n  const handleKeydown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n  const handleOverlayClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={styles.Overlay} onClick={handleOverlayClick}>\r\n      <div className={styles.Modal}>\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n// class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener(\"keydown\", this.handleKeydown);\r\n//   }\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener(\"keydown\", this.handleKeydown);\r\n//   }\r\n\r\n//   handleKeydown = (e) => {\r\n//     if (e.code === \"Escape\") {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n//   handleOverlayClick = (e) => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n//   render() {\r\n//     const { src, alt } = this.props;\r\n//     return createPortal(\r\n//       <div className={styles.Overlay} onClick={this.handleOverlayClick}>\r\n//         <div className={styles.Modal}>\r\n//           {\" \"}\r\n//           <img src={src} alt={alt} />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Modal;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Button.module.css\";\r\n// import React, { Component } from \"react\";\r\nimport React, {  useEffect} from \"react\";\r\n\r\nconst Button = ({onFetchImages}) => {\r\n  useEffect(() => {\r\n        window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  },[])\r\n  return (\r\n        <button\r\n        type=\"button\"\r\n        className={styles.Button}\r\n        onClick={onFetchImages}\r\n      >\r\n        Load more\r\n      </button> )\r\n}\r\n// class Button extends Component {\r\n//   componentDidMount() {\r\n//     window.scrollTo({\r\n//       top: document.documentElement.scrollHeight,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <button\r\n//         type=\"button\"\r\n//         className={styles.Button}\r\n//         onClick={this.props.onFetchImages}\r\n//       >\r\n//         Load more\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// import React, { Component } from \"react\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport ImageGalleryItem from \"./components/ImageGalleryItem/ImageGalleryItem\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Button from \"./components/Button/Button\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [pictures, setPictures] = useState([]);\r\n  const [searchPictureName, setSearchPictureName] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalUrl, setModalUrl] = useState(\"\");\r\n  const [modalAlt, setModalAlt] = useState(\"\");\r\n  const [currentPageImages, setCurrentPageImages] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!searchPictureName) {\r\n      return;\r\n    }\r\n    fetchImages();\r\n  }, [searchPictureName]);\r\n\r\n  const onFormSubmit = (searchPicture) => {\r\n    setSearchPictureName(searchPicture);\r\n    setCurrentPage(1);\r\n    setPictures([]);\r\n  };\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const onPictureClick = (e) => {\r\n    setModalUrl(e.currentTarget.getAttribute(\"url\"));\r\n    setModalAlt(e.currentTarget.getAttribute(\"alt\"));\r\n    toggleModal();\r\n  };\r\n\r\n  const fetchImages = () => {\r\n    const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchPictureName}&page=${currentPage}&per_page=12&key=21861129-b5e52c4cca63d1835e3548bf1`;\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(({ hits }) => {\r\n        if (hits.length !== 0) {\r\n          return hits;\r\n        }\r\n        return Promise.reject(new Error(\"No such pictures found\"));\r\n      })\r\n      .then((pictures) => {\r\n        setPictures((prevPictures) => [...prevPictures, ...pictures]);\r\n        setCurrentPage((prevState) => prevState + 1);\r\n        setCurrentPageImages([...pictures]);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n  const shouldRenderLoadMoreButton =\r\n    !(currentPageImages.length < 12) && !loading;\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onFormSubmit} />\r\n      {error && <p>{error.message}</p>}\r\n      {loading && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n\r\n      <ImageGallery>\r\n        {pictures.map(({ largeImageURL, tags, webformatURL, id }) => (\r\n          <ImageGalleryItem\r\n            largeImageURL={largeImageURL}\r\n            tags={tags}\r\n            webformatURL={webformatURL}\r\n            key={id}\r\n            onPictureClick={onPictureClick}\r\n          />\r\n        ))}\r\n      </ImageGallery>\r\n      {modal && <Modal src={modalUrl} alt={modalAlt} onClose={toggleModal} />}\r\n      {shouldRenderLoadMoreButton && !error && (\r\n        <Button onFetchImages={fetchImages} />\r\n      )}\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     pictures: [],\r\n//     searchPictureName: \"\",\r\n//     currentPage: 1,\r\n//     error: null,\r\n//     loading: false,\r\n//     modal: false,\r\n//     modalUrl: \"\",\r\n//     modalAlt: \"\",\r\n//     currentPageImages: \"\",\r\n//   };\r\n\r\n//   onFormSubmit = (searchPicture) => {\r\n//     this.setState({\r\n//       searchPictureName: searchPicture,\r\n//         currentPage: 1,\r\n//       pictures: [],\r\n//     });\r\n//   };\r\n//   toggleModal = () => {\r\n//     this.setState(({ modal }) => ({\r\n//       modal: !modal,\r\n//     }));\r\n//   };\r\n//   onPictureClick = (e) => {\r\n//     this.setState({\r\n//       modalUrl: e.currentTarget.getAttribute(\"url\"),\r\n//       modalAlt: e.currentTarget.getAttribute(\"alt\"),\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const currentName = this.state.searchPictureName;\r\n//     const prevName = prevState.searchPictureName;\r\n//     if (prevName !== currentName) {\r\n//       this.fetchImages();\r\n//       }\r\n\r\n//   }\r\n//   fetchImages = () => {\r\n//     const currentName = this.state.searchPictureName;\r\n//     const currentPage = this.state.currentPage;\r\n//     const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${currentName}&page=${currentPage}&per_page=12&key=21861129-b5e52c4cca63d1835e3548bf1`;\r\n\r\n//     this.setState({ loading: true,  error: null });\r\n//     fetch(url)\r\n//       .then((response) => {\r\n//         return response.json();\r\n//       })\r\n//       .then(({ hits }) => {\r\n//         if (hits.length !== 0) {\r\n//           return hits;\r\n//         }\r\n//         return Promise.reject(new Error(\"No such pictures found\"));\r\n//       })\r\n//       .then((pictures) =>\r\n//         this.setState((prevState) => ({\r\n//           pictures: [...prevState.pictures, ...pictures],\r\n//           currentPage: prevState.currentPage + 1,\r\n//           currentPageImages: [...pictures],\r\n//         }))\r\n//       )\r\n\r\n//       .catch((error) => {\r\n//         this.setState({ error });\r\n//       })\r\n//       .finally(() => this.setState({ loading: false }));\r\n//   };\r\n\r\n//   render() {\r\n//     const {\r\n//       pictures,\r\n//       loading,\r\n//       error,\r\n//       modal,\r\n//       modalUrl,\r\n//       modalAlt,\r\n//       currentPageImages,\r\n//     } = this.state;\r\n//     const shouldRenderLoadMoreButton =\r\n//       !(currentPageImages.length < 12) && !loading;\r\n//     return (\r\n//       <>\r\n//         <Searchbar onSubmit={this.onFormSubmit} />\r\n//         {error && <p>{error.message}</p>}\r\n//         {loading && (\r\n//           <Loader\r\n//             type=\"Puff\"\r\n//             color=\"#00BFFF\"\r\n//             height={100}\r\n//             width={100}\r\n//             timeout={3000}\r\n//           />\r\n//         )}\r\n\r\n//         <ImageGallery>\r\n//           {pictures.map(({ largeImageURL, tags, webformatURL, id }) => (\r\n//             <ImageGalleryItem\r\n//               largeImageURL={largeImageURL}\r\n//               tags={tags}\r\n//               webformatURL={webformatURL}\r\n//               key={id}\r\n//               onPictureClick={this.onPictureClick}\r\n//             />\r\n//           ))}\r\n//         </ImageGallery>\r\n//         {modal && (\r\n//           <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\r\n\r\n//         )}\r\n//         {shouldRenderLoadMoreButton && !error && (\r\n//           <Button onFetchImages={this.fetchImages} />\r\n//         )}\r\n\r\n//         <ToastContainer\r\n//           position=\"top-center\"\r\n//           autoClose={2000}\r\n//           hideProgressBar={false}\r\n//           newestOnTop={false}\r\n//           closeOnClick={false}\r\n//           rtl={false}\r\n//           pauseOnFocusLoss\r\n//           draggable\r\n//           pauseOnHover\r\n//         />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__ButAD\",\"SearchForm\":\"Searchbar_SearchForm__1TGhn\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2TY9T\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3-hBF\",\"SearchForm_input\":\"Searchbar_SearchForm_input__WRP2r\"};"],"sourceRoot":""}